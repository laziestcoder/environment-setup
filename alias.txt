# start of my aliases

alias cl="clear"
alias dcstart="docker-compose up -d"
alias dcstop="docker-compose stop"
alias dcallstop="docker stop \$(docker ps -aq)"
alias dcedit="vim docker-compose.yml"
alias dcremoveallimages="docker image rm -f \$(docker image ls -aq)"
alias dcremoveallcontainers="docker container rm -f \$(docker container ls -aq)"
alias bashedit="cd && vim .bashrc"
alias bashrs="cd && source .bashrc"
alias pf="poweroff"
alias checkAllService="systemctl --type service --state running"

#git aliases

alias gs="git status"
alias gb="git branch"
alias grl="git reflog"
alias gl="git log"
alias ga="git add ."
alias gc="git commit"
alias gcm="git commit -m"
alias gps="git push"
alias gpl="git pull"
alias gmps="git push --recurse-submodules=on-demand"
alias gmpl="git pull --recurse-submodules"
alias gitclone="git clone"
alias git-drop-commit="git_drop_commit"
alias grbi="git rebase -i"
alias gfall="git fetch --all"
alias gitchk="git checkout"

# language aliases

alias python="python3"

#machine aliases
alias updateMachine="sudo apt update -y && sudo apt upgrade -y && sudo apt full-upgrade -y"
alias myjupyter="cd && cd learning/my_jupyter_works/ && source my_jupyter_works/bin/activate && jupyter notebook"
alias mvnCleanInstallSkipTest="mvn -T 1.5C clean install -DskipTests"
alias mavenRepoRemove="sudo rm -rf ~/.m2"
alias netNtlp="netstat -ntlp"

#version change alias

alias changeJavaVersionTo='bash ~/workspace/environment-setup/changeJavaVersionTo.sh'


#my alias function

gitcheckout () {
        branch_name="$1"
        git checkout "$branch_name"
}


gitCheckoutOrigin () {
	branch_name="$1"
	git checkout origin/"$branch_name"
}

git_drop_commit() {
    if [ -z "$1" ]; then
        echo "Usage: git-drop-commit <commit-hash-or-prefix>"
        return 1
    fi

    local commit_hash="$1"

    # Check if the commit exists
    if ! git rev-parse --verify "$commit_hash" &>/dev/null; then
        echo "Error: Commit '$commit_hash' not found."
        return 1
    fi

    echo "Dropping commit: $commit_hash"

    # Start rebase and drop the commit
    git rebase --onto "$commit_hash"^ "$commit_hash"

    if [ $? -eq 0 ]; then
        echo "Commit $commit_hash successfully dropped."
    else
        echo "Rebase failed. Please resolve conflicts and continue."
        return 1
    fi
}

gitReverseCommitX () {
   echo "executing git reset --soft HEAD^$1"
   git reset --soft HEAD^$1

   echo "executing git restore --staged ."
   git restore --staged .
}

killPort () {
	PID=$(sudo lsof -t -i:$1)
        sudo kill -9 ${PID}
}

checkPort (){
	sudo lsof -i :$1
}

catGitConfig (){
        cat $1/.git/config
}

gmerge () {
	git checkout $1 && git merge $2 && git pull && git push && git checkout $2
}

goto () {
	cd ~/workspace/
	if [ -d "$1" ]; then
           cd "$1"
	   if [ -d "project" ]; then
		cd project/
	   fi
	else
	   echo "Directory '$1' not found."
	fi
}


# end of my alias